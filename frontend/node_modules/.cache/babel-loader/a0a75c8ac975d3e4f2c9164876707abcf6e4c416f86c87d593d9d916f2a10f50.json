{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\expense-tracker_fullstack-master\\\\frontend\\\\src\\\\Components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom'; // For navigation after login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Hook to navigate after login\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Basic validation check\n    if (!email || !password) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    // Call your login API here (for now, assuming a successful login)\n    // You can replace the mock logic below with actual authentication logic\n\n    if (email === 'test@example.com' && password === 'password') {\n      // If login is successful, redirect to the dashboard\n      navigate('/dashboard');\n    } else {\n      setError('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginPageStyled, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nconst LoginPageStyled = styled.div`\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba(252, 246, 249, 0.9);\n    background-image: url('./img/bg.png'); /* Set your background image */\n    background-size: cover;\n    background-position: center;\n`;\n_c2 = LoginPageStyled;\nconst LoginForm = styled.form`\n    background: rgba(255, 255, 255, 0.8);\n    padding: 3rem;\n    border-radius: 12px;\n    box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    width: 100%;\n    max-width: 400px;\n    text-align: center;\n\n    h2 {\n        margin-bottom: 1rem;\n        font-size: 2rem;\n        color: var(--primary-color);\n    }\n\n    .input-container {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n        align-items: flex-start;\n\n        label {\n            color: var(--primary-color);\n            font-size: 1rem;\n        }\n\n        input {\n            width: 100%;\n            padding: 0.8rem;\n            border: 1px solid #ccc;\n            border-radius: 8px;\n            font-size: 1rem;\n            outline: none;\n            background-color: #f5f5f5;\n\n            &:focus {\n                border-color: var(--primary-color);\n            }\n        }\n    }\n\n    button {\n        padding: 0.8rem;\n        font-size: 1.2rem;\n        border: none;\n        background-color: var(--color-accent);\n        color: white;\n        border-radius: 8px;\n        cursor: pointer;\n        transition: background-color 0.3s ease;\n\n        &:hover {\n            background-color: var(--primary-color);\n        }\n    }\n`;\n_c3 = LoginForm;\nconst Error = styled.p`\n    color: red;\n    font-size: 1rem;\n    margin-bottom: 1rem;\n`;\n_c4 = Error;\nexport default Login;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"LoginPageStyled\");\n$RefreshReg$(_c3, \"LoginForm\");\n$RefreshReg$(_c4, \"Error\");","map":{"version":3,"names":["React","useState","styled","useNavigate","Login","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","target","value","LoginPageStyled","div","LoginForm","form","Error","p"],"sources":["C:/Users/USER/Desktop/expense-tracker_fullstack-master/frontend/src/Components/Login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom'; // For navigation after login\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate(); // Hook to navigate after login\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Basic validation check\r\n        if (!email || !password) {\r\n            setError('Please fill in all fields');\r\n            return;\r\n        }\r\n\r\n        // Call your login API here (for now, assuming a successful login)\r\n        // You can replace the mock logic below with actual authentication logic\r\n        \r\n        if (email === 'test@example.com' && password === 'password') {\r\n            // If login is successful, redirect to the dashboard\r\n            navigate('/dashboard');\r\n        } else {\r\n            setError('Invalid credentials');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <LoginPageStyled>\r\n            <LoginForm onSubmit={handleSubmit}>\r\n                <h2>Login</h2>\r\n                {error && <Error>{error}</Error>}\r\n                <div className=\"input-container\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input \r\n                        type=\"email\" \r\n                        id=\"email\" \r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        placeholder=\"Enter your email\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"Enter your password\"\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Login</button>\r\n            </LoginForm>\r\n        </LoginPageStyled>\r\n    );\r\n}\r\n\r\nconst LoginPageStyled = styled.div`\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: rgba(252, 246, 249, 0.9);\r\n    background-image: url('./img/bg.png'); /* Set your background image */\r\n    background-size: cover;\r\n    background-position: center;\r\n`;\r\n\r\nconst LoginForm = styled.form`\r\n    background: rgba(255, 255, 255, 0.8);\r\n    padding: 3rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n    width: 100%;\r\n    max-width: 400px;\r\n    text-align: center;\r\n\r\n    h2 {\r\n        margin-bottom: 1rem;\r\n        font-size: 2rem;\r\n        color: var(--primary-color);\r\n    }\r\n\r\n    .input-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 0.5rem;\r\n        align-items: flex-start;\r\n\r\n        label {\r\n            color: var(--primary-color);\r\n            font-size: 1rem;\r\n        }\r\n\r\n        input {\r\n            width: 100%;\r\n            padding: 0.8rem;\r\n            border: 1px solid #ccc;\r\n            border-radius: 8px;\r\n            font-size: 1rem;\r\n            outline: none;\r\n            background-color: #f5f5f5;\r\n\r\n            &:focus {\r\n                border-color: var(--primary-color);\r\n            }\r\n        }\r\n    }\r\n\r\n    button {\r\n        padding: 0.8rem;\r\n        font-size: 1.2rem;\r\n        border: none;\r\n        background-color: var(--color-accent);\r\n        color: white;\r\n        border-radius: 8px;\r\n        cursor: pointer;\r\n        transition: background-color 0.3s ease;\r\n\r\n        &:hover {\r\n            background-color: var(--primary-color);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Error = styled.p`\r\n    color: red;\r\n    font-size: 1rem;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}